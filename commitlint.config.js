const scopes = ['', 'ci', 'deps', 'dx', 'example', 'release', 'readme', 'build']

/** @type {import('cz-git').UserConfig} */
export default {
  rules: {
    'scope-enum': [2, 'always', scopes],
  },
  prompt: {
    messages: {
      type: "Select the type of change that you're committing:",
      scope: 'Select the SCOPE of this change (optional):',
      customScope: 'Select the SCOPE of this change:',
      subject: 'Write a SHORT, IMPERATIVE tense description of the change:\n',
      body: 'Provide a LONGER description of the change (optional). Use "|" to break new line:\n',
      breaking: 'List any BREAKING CHANGES (optional). Use "|" to break new line:\n',
      footerPrefixesSelect: 'Select the ISSUES type of changeList by this change (optional):',
      customFooterPrefixes: 'Input ISSUES prefix:',
      footer: 'List any ISSUES by this change. E.g.: #31, #34:\n',
      confirmCommit: 'Are you sure you want to proceed with the commit above?',
    },
    types: [
      { value: 'feat', name: 'feat:     ‚ú®  A new feature', emoji: ':sparkles:' },
      { value: 'fix', name: 'fix:      üêõ  A bug fix', emoji: ':bug:' },
      { value: 'docs', name: 'docs:     üìù  Documentation only changes', emoji: ':memo:' },
      { value: 'style', name: 'style:    üíÑ  Changes that do not affect the meaning of the code', emoji: ':lipstick:' },
      {
        value: 'refactor',
        name: 'refactor: ‚ôªÔ∏è   A code change that neither fixes a bug nor adds a feature',
        emoji: ':recycle:',
      },
      { value: 'perf', name: 'perf:     ‚ö°Ô∏è  A code change that improves performance', emoji: ':zap:' },
      {
        value: 'test',
        name: 'test:     ‚úÖ  Adding missing tests or adjusting existing tests',
        emoji: ':white_check_mark:',
      },
      {
        value: 'build',
        name: 'build:    üì¶Ô∏è  Changes that affect the build system or external dependencies',
        emoji: ':package:',
      },
      { value: 'ci', name: 'ci:       üé°  Changes to our CI configuration files and scripts', emoji: ':ferris_wheel:' },
      { value: 'chore', name: "chore:    üî®  Other changes that don't modify src or test files", emoji: ':hammer:' },
      { value: 'revert', name: 'revert:   ‚è™Ô∏è  Reverts a previous commit', emoji: ':rewind:' },
    ],
    useEmoji: false,
    themeColorCode: '',
    scopes,
    allowCustomScopes: true,
    allowEmptyScopes: true,
    customScopesAlign: 'bottom',
    customScopesAlias: 'custom',
    emptyScopesAlias: 'empty',
    upperCaseSubject: false,
    allowBreakingChanges: ['feat', 'fix'],
    breaklineNumber: 100,
    breaklineChar: '|',
    skipQuestions: [],
    issuePrefixes: [{ value: 'closed', name: 'closed:   ISSUES has been processed' }],
    customIssuePrefixesAlign: 'top',
    emptyIssuePrefixesAlias: 'skip',
    customIssuePrefixesAlias: 'custom',
    allowCustomIssuePrefixes: true,
    allowEmptyIssuePrefixes: true,
    confirmColorize: true,
    maxHeaderLength: Number.POSITIVE_INFINITY,
    maxSubjectLength: Number.POSITIVE_INFINITY,
    minSubjectLength: 0,
    scopeOverrides: undefined,
    defaultBody: '',
    defaultIssues: '',
    defaultScope: '',
    defaultSubject: '',
  },
}
